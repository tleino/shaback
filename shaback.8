.Dd $Mdocdate: September 5 2021 $
.Dt SHABACK 8
.Os
.Sh NAME
.Nm shaback
.Nd SHA-checksummed backup
.Sh SYNOPSIS
.Nm shaback
write
.Bk -words
.Op -oz
.Ar target
.Op Ar file Ar ...
.Ek
.Nm
read
.Ar target
.Ek
.Nm
check
.Ar target
.Nm
list
.Ar target
.Ek
.Sh DESCRIPTION
.Nm
is a SHA-checksumming backup/restore tool, similar to
tar(1), pax(1), dump(8) but with proper checksums.
.Pp
USE AT YOUR OWN RISK! NOT YET TESTED VERY WELL!
.Pp
.Nm
archives should be written directly to raw mass storage
device without a filesystem layer in between because
.Nm
writes data mostly linearly and there is only a minimal amount
of seeking. When compared to tools like rsync(1), it should be
much faster to write linearly to raw disk.
.Pp
.Nm
uses some advantages that were not previously available
when doing backups: now RAM is cheap, VFS caches can be huge and
can be leveraged and some seeking is possible that is unless you're
one of the rare persons who still uses tape backup. For these
reasons,
.Nm
can be a better / faster choice than the legacy
alternatives, or the end result is a smaller archive size.
.Pp
The write mode accepts these options:
.Pp
.Bl -tag -width Ds
.It Fl o
Perform deduplication by (sometimes) overwriting instead of
reading (always) twice. This behavior might be more suitable for
media such as HDD that is not limited by the number of writes.
Either reading twice or writing twice is necessary because we
need to read the full file for calculating it's hash so that
we know whether the file is duplicated or not.
.It Fl z
Compress files individually unless the files are very small or
if they are already compressed.
.El
.Sh SEE ALSO
.Xr dump 8 ,
.Xr tar 1
