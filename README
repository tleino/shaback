Shaback is a SHA-checksumming backup/restore tool, similar to
tar(1), pax(1), dump(8) but with proper checksums.

USE AT YOUR OWN RISK! NOT YET TESTED VERY WELL!

Shaback archives should be written directly to raw mass storage
device without a filesystem layer in between because Shaback
writes data mostly linearly and there is only a minimal amount
of seeking. When compared to tools like rsync(1), it should be
much faster to write linearly to raw disk.

Shaback uses some advantages that were not previously available
when doing backups: now RAM is cheap, VFS caches can be huge and
can be leveraged and some seeking is possible that is unless you're
one of the rare persons who still uses tape backup. For these
reasons, Shaback can be a better / faster choice than the legacy
alternatives, or the end result is a smaller archive size.

Features:

  1) Free from file size or file name limits or byte-order issues

     Numbers and strings are stored in a text-format.

  2) Does SHA-checksumming

     Testing of backups is important. Shaback archives can be tested
     without writing data.

  3) Stores metadata to index blocks

     Single files can be restored fast, yet we have recoverability
     benefit of having metadata all around the disk.

  4) Deduplicates fast

     Because SHA-checksumming is done anyways, and because VFS cache
     can often be leveraged, and because the hashes can be kept in
     memory, deduplication is almost free nowadays.

  5) The format is mostly text-based, easy to work with

     For the recoverability.

  6) Optional per-file compression

     Better recoverability than with .tar.gz-like compression where
     the whole stream is compressed and allows for avoiding
     recompression or compressing too small files.

Dependencies:

  On OpenBSD:
  - libz

  On Linux:
  - libz
  - libssl-dev

To compile:

  - ./configure
  - make install

To run:

  $ shaback write /tmp/foo .
  $ shaback check /tmp/foo
  $ cd /tmp/outdir && shaback read /tmp/foo
